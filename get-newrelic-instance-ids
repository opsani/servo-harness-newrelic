#!/usr/bin/env python

import requests
import json
import yaml
import re
import sys

with open("config.yaml", "r") as ymlfile:
    harness_config = yaml.load(ymlfile, Loader=yaml.FullLoader)

config = harness_config["canary"]

url = "https://api.opsani.com/accounts/{}/applications/{}/assets/opsani.com/userdata/".format(
    config["opsani_account"], config["opsani_app_name"]
)

with open("/etc/opsani-auth/token", "r") as auth_file:
    opsani_token = auth_file.read().strip()
headers = {
    "Content-type": "application/merge-patch+json",
    "Authorization": "Bearer {}".format(opsani_token),
}
response = requests.get(url, headers=headers)
opsani_config = response.json()
canary = opsani_config.get('data', {}).get('canary')
canary_ip = canary.get('ip')
canary_ip = re.sub(r"\.", "-", canary_ip)
canary_hostname = f"ip-{canary_ip}.ec2.internal"

if not response.ok:
    raise('Unable to query OCO config. Status code {}. Data {}'.format(response.status_code, response.text))

with open("/run/secrets/optune_newrelic_apm_app_id", "r") as auth_file:
    newrelic_app_id = auth_file.read().strip()

with open("/run/secrets/optune_newrelic_apm_api_key", "r") as auth_file:
    newrelic_api_key = auth_file.read().strip()

url = f"https://api.newrelic.com/v2/applications/{newrelic_app_id}/instances.json"
headers = {
    "X-Api-Key": newrelic_api_key
}

result = requests.post(url,headers=headers).json()

monitoring = {'instance_ids': [], 'ref_instance_ids': []}
for item in result['application_instances']:
    if item['host'] in canary_hostname:
        monitoring['instance_ids'].append(item['host'])
    else:
        monitoring['ref_instance_ids'].append(item['host'])
 
print(json.dumps(monitoring), file=sys.stdout)
